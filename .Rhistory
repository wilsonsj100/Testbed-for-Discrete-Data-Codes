### Plot Style 2
#need to work out how best to plot these data
viz_NH3_plot <- ggplot(data = CH4_forplot, aes(x = as.factor(CO2_Treatment), y = CH4_Conc_umol, fill=as.factor(CO2_Treatment))) +
geom_bar(stat = "identity", position = position_dodge2(preserve = "single"),
color="black") +
facet_grid(N_Treatment~Depth, scales="free_x") +
scale_fill_manual(values = c("Amb" = "midnightblue",
"Elev" = "mediumvioletred")) +
theme_classic() +
labs(x= " ", y="CH4 ()", title="CO2xN: Porewater Methane", fill="Treatment:") +
theme(legend.position = "right") +
scale_x_discrete(drop = TRUE)+
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8))
print(viz_NH3_plot)
cat("Visualize Data")
### Plot Style 1
CH4_forplot <- df_all_clean
#need to work out how best to plot these data
viz_CH4_plot <- ggplot(data = CH4_forplot, aes(x = as.factor(Treatment), y = CH4_Conc_umol, fill = as.factor(Treatment))) +
geom_bar(stat = "identity", position = position_dodge2(preserve = "single"),
color="black") +
facet_grid(~ Depth, scales="free_x") +
scale_fill_manual(values = c("Ambient" = "#007C77",
"eCO2" = "#F46036",
"N" = "#85CB33",
"eCO2_N" = "#EF27A6")) +
theme_classic() +
labs(x= " ", y="CH4 (umol)", title="CO2xN: Porewater Methane", fill = "Treatment") +
theme(legend.position = "right") +
scale_x_discrete(drop = TRUE)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.3),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8))
print(viz_CH4_plot)
### Plot Style 2
#need to work out how best to plot these data
viz_NH3_plot <- ggplot(data = CH4_forplot, aes(x = as.factor(CO2_Treatment), y = CH4_Conc_umol, fill=as.factor(CO2_Treatment))) +
geom_bar(stat = "identity", position = position_dodge2(preserve = "single"),
color="black") +
facet_grid(N_Treatment~Depth, scales="free_x") +
scale_fill_manual(values = c("Amb" = "midnightblue",
"Elev" = "mediumvioletred")) +
theme_classic() +
labs(x= " ", y="CH4 ()", title="CO2xN: Porewater Methane", fill="Treatment:") +
theme(legend.position = "right") +
scale_x_discrete(drop = TRUE)+
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8))
print(viz_NH3_plot)
View(raw)
cat("Assess Blanks")
Blanks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#Pull out samples from df_all to calc quantile
samples_blanks <- raw %>%
filter(str_detect(Sample_Name, c("L"))) %>%
filter(!str_detect(Sample_Name, c("1mg/L ammonia"))) #have to do this because CO2xN ids start with L
cat("Assess Blanks")
Blanks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#Pull out samples from df_all to calc quantile
samples_blanks <- raw %>%
filter(str_detect(Type, c("Sample")))  #have to do this because CO2xN ids start with L
#Calculating the lowest 25% of sample concentrations to compare to the blank concentrations
blk_flag_CH4 <- quantile(samples_blanks$CH4_Area, prob=c(.25))   #this gives you the lower 25% quartile of the data
NH3_blks$NH3_diff_flag <-  ifelse(Blanks$CH4_Area <= blk_flag_CH4, 'YES', 'NO, rerun')
#calculate the percent of check standards that are within the range based on the flag
NH3_blks_percent <- (sum(NH3_blks$NH3_diff_flag == "YES")/nrow(NH3_blks))*100
#report out if flags indicate need for rerun
ifelse(NH3_blks_percent >= 60,
">60% of NH3 Blanks are below the lower 25% quartile of samples - PROCEED",
"<60% of NH3 blaks are lower 25% quartile of samples - REASSESS")
#plotting the blanks compared to the lower 25% of conc (what the flag is)
NH3_blks_plot <-  ggplot(data = NH3_blks, aes(x = rep, y = Conc, fill=NH3_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c("YES" = "deepskyblue3", "NO, rerun" = "darkred")) +
theme_classic() + labs(x= " ", y="NH3  (mg/L)", title="NH3 Blanks") +
theme(legend.position="bottom") +
geom_hline(yintercept=as.numeric(blk_flag_NH3), linetype="dashed",
color = "black", linewidth=1)  +
guides(fill=guide_legend(title="Blank Conc <25% Quartile Samples"))
print(NH3_blks_plot)
#find average of run blanks for flagging samples later
# Compute averages
blk_avg_NH3 <- mean(NH3_blks$Conc, na.rm = TRUE)
# Create a data frame
blank_avgs <- data.frame(
Test = c("NH3"),
Blank_Mean_Conc = c(blk_avg_NH3)
)
# Pretty print
knitr::kable(blank_avgs, caption = "Mean Concentration of Blanks", digits = 4)
#write out a flag to the sample dataframe if more than 60% of the blanks are above the lower 25% quantile of samples
if (NH3_blks_percent <= chks_flag) {  # assuming you have tn_chks_percent similarly
df_all_cor$NH3_flag <- ifelse(
df_all_cor$NH3_flag != "",
paste0(df_all_cor$NH3_flag, "; NH3 blanks out of range"),
"NH3 blanks out of range"
)
}
cat("Assess Blanks")
Blanks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#Pull out samples from df_all to calc quantile
samples_blanks <- raw %>%
filter(str_detect(Type, c("Sample")))  #have to do this because CO2xN ids start with L
#Calculating the lowest 25% of sample concentrations to compare to the blank concentrations
blk_flag_CH4 <- quantile(samples_blanks$CH4_Area, prob=c(.25))   #this gives you the lower 25% quartile of the data
CH4_blks$CH4_diff_flag <-  ifelse(Blanks$CH4_Area <= blk_flag_CH4, 'YES', 'NO, rerun')
#calculate the percent of check standards that are within the range based on the flag
CH4_blks_percent <- (sum(CH4_blks$CH4_diff_flag == "YES")/nrow(CH4_blks))*100
#report out if flags indicate need for rerun
ifelse(CH4_blks_percent >= 60,
">60% of CH4 Blanks are below the lower 25% quartile of samples - PROCEED",
"<60% of CH4 blaks are lower 25% quartile of samples - REASSESS")
#plotting the blanks compared to the lower 25% of conc (what the flag is)
CH4_blks_plot <-  ggplot(data = CH4_blks, aes(x = rep, y = Conc, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c("YES" = "deepskyblue3", "NO, rerun" = "darkred")) +
theme_classic() + labs(x= " ", y="CH4 Area", title="CH4 Blanks") +
theme(legend.position="bottom") +
geom_hline(yintercept=as.numeric(blk_flag_CH4), linetype="dashed",
color = "black", linewidth=1)  +
guides(fill=guide_legend(title="Blank Conc <25% Quartile Samples"))
print(CH4_blks_plot)
#find average of run blanks for flagging samples later
# Compute averages
blk_avg_CH4 <- mean(CH4_blks$Conc, na.rm = TRUE)
# Create a data frame
blank_avgs <- data.frame(
Test = c("CH4"),
Blank_Mean_Conc = c(blk_avg_CH4)
)
# Pretty print
knitr::kable(blank_avgs, caption = "Mean Concentration of Blanks", digits = 4)
#write out a flag to the sample dataframe if more than 60% of the blanks are above the lower 25% quantile of samples
if (CH4_blks_percent <= chks_flag) {  # assuming you have tn_chks_percent similarly
df_all_cor$CH4_flag <- ifelse(
df_all_cor$CH4_flag != "",
paste0(df_all_cor$CH4_flag, "; CH4 blanks out of range"),
"CH4 blanks out of range"
)
}
cat("Assess Blanks")
CH4_blks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#Pull out samples from df_all to calc quantile
samples_blanks <- raw %>%
filter(str_detect(Type, c("Sample")))  #have to do this because CO2xN ids start with L
#Calculating the lowest 25% of sample concentrations to compare to the blank concentrations
blk_flag_CH4 <- quantile(samples_blanks$CH4_Area, prob=c(.25))   #this gives you the lower 25% quartile of the data
CH4_blks$CH4_diff_flag <-  ifelse(Blanks$CH4_Area <= blk_flag_CH4, 'YES', 'NO, rerun')
#calculate the percent of check standards that are within the range based on the flag
CH4_blks_percent <- (sum(CH4_blks$CH4_diff_flag == "YES")/nrow(CH4_blks))*100
#report out if flags indicate need for rerun
ifelse(CH4_blks_percent >= 60,
">60% of CH4 Blanks are below the lower 25% quartile of samples - PROCEED",
"<60% of CH4 blaks are lower 25% quartile of samples - REASSESS")
#plotting the blanks compared to the lower 25% of conc (what the flag is)
CH4_blks_plot <-  ggplot(data = CH4_blks, aes(x = rep, y = Conc, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c("YES" = "deepskyblue3", "NO, rerun" = "darkred")) +
theme_classic() + labs(x= " ", y="CH4 Area", title="CH4 Blanks") +
theme(legend.position="bottom") +
geom_hline(yintercept=as.numeric(blk_flag_CH4), linetype="dashed",
color = "black", linewidth=1)  +
guides(fill=guide_legend(title="Blank Conc <25% Quartile Samples"))
print(CH4_blks_plot)
View(CH4_blks)
cat("Assess Blanks")
CH4_blks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#Pull out samples from df_all to calc quantile
samples_blanks <- raw %>%
filter(str_detect(Type, c("Sample")))  #have to do this because CO2xN ids start with L
#Calculating the lowest 25% of sample concentrations to compare to the blank concentrations
blk_flag_CH4 <- quantile(samples_blanks$CH4_Area, prob=c(.25))   #this gives you the lower 25% quartile of the data
CH4_blks$CH4_diff_flag <-  ifelse(Blanks$CH4_Area <= blk_flag_CH4, 'YES', 'NO, rerun')
#calculate the percent of check standards that are within the range based on the flag
CH4_blks_percent <- (sum(CH4_blks$CH4_diff_flag == "YES")/nrow(CH4_blks))*100
#report out if flags indicate need for rerun
ifelse(CH4_blks_percent >= 60,
">60% of CH4 Blanks are below the lower 25% quartile of samples - PROCEED",
"<60% of CH4 blaks are lower 25% quartile of samples - REASSESS")
#plotting the blanks compared to the lower 25% of conc (what the flag is)
CH4_blks_plot <-  ggplot(data = CH4_blks, aes(x = rep, y = CH4_Area, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c("YES" = "deepskyblue3", "NO, rerun" = "darkred")) +
theme_classic() + labs(x= " ", y="CH4 Area", title="CH4 Blanks") +
theme(legend.position="bottom") +
geom_hline(yintercept=as.numeric(blk_flag_CH4), linetype="dashed",
color = "black", linewidth=1)  +
guides(fill=guide_legend(title="Blank Conc <25% Quartile Samples"))
print(CH4_blks_plot)
cat("Assess Blanks")
CH4_blks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#Pull out samples from df_all to calc quantile
samples_blanks <- raw %>%
filter(str_detect(Type, c("Sample")))  #have to do this because CO2xN ids start with L
#Calculating the lowest 25% of sample concentrations to compare to the blank concentrations
blk_flag_CH4 <- quantile(samples_blanks$CH4_Area, prob=c(.25))   #this gives you the lower 25% quartile of the data
CH4_blks$CH4_diff_flag <-  ifelse(Blanks$CH4_Area <= blk_flag_CH4, 'YES', 'NO, rerun')
#calculate the percent of check standards that are within the range based on the flag
CH4_blks_percent <- (sum(CH4_blks$CH4_diff_flag == "YES")/nrow(CH4_blks))*100
#report out if flags indicate need for rerun
ifelse(CH4_blks_percent >= 60,
">60% of CH4 Blanks are below the lower 25% quartile of samples - PROCEED",
"<60% of CH4 blaks are lower 25% quartile of samples - REASSESS")
#plotting the blanks compared to the lower 25% of conc (what the flag is)
CH4_blks_plot <-  ggplot(data = CH4_blks, aes(x = Sample_ID, y = CH4_Area, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c("YES" = "deepskyblue3", "NO, rerun" = "darkred")) +
theme_classic() + labs(x= " ", y="CH4 Area", title="CH4 Blanks") +
theme(legend.position="bottom") +
geom_hline(yintercept=as.numeric(blk_flag_CH4), linetype="dashed",
color = "black", linewidth=1)  +
guides(fill=guide_legend(title="Blank Conc <25% Quartile Samples"))
print(CH4_blks_plot)
#find average of run blanks for flagging samples later
# Compute averages
blk_avg_CH4 <- mean(CH4_blks$Conc, na.rm = TRUE)
# Create a data frame
blank_avgs <- data.frame(
Test = c("CH4"),
Blank_Mean_Conc = c(blk_avg_CH4)
)
# Pretty print
knitr::kable(blank_avgs, caption = "Mean Concentration of Blanks", digits = 4)
#write out a flag to the sample dataframe if more than 60% of the blanks are above the lower 25% quantile of samples
if (CH4_blks_percent <= chks_flag) {  # assuming you have tn_chks_percent similarly
df_all_cor$CH4_flag <- ifelse(
df_all_cor$CH4_flag != "",
paste0(df_all_cor$CH4_flag, "; CH4 blanks out of range"),
"CH4 blanks out of range"
)
}
library(dplyr)
library(ggplot2)
library(ggpubr)
library(stringr)
library(fuzzyjoin)
cat("Run Information: Brenden D. Blakley ") #lets you know what section you're in
#set the run date & user name
run_date <- "06/16/2025"
sample_year <- "2025"
sample_month <- "May"
user <- "Brenden Blakley"
#identify the files you want to read in
#read in as a list to accommodate multiple runs in a month
GHG_file <- "Raw Data/20250616_2M_MAY_GHG.csv"
# Define the file path for QAQC log file - NO Need to change just check year
log_path <- "Processed Data/LTREB_2M_ShimadzuGC_QAQC_2025.csv"
# Define final path for data be sure to change year and month and run number
final_path <- "Processed Data/GCReW_CO2xN_Porewater_CH4_202505_2.csv"
#Gas in Water Calculations
# "TempC" column value in Kelvin (equilibration temperature) and volume of gas (in liters) in syringe
TempC = 22.7
volume = 0.012
#record any notes about the run or anything other info here:
run_notes <- ""
#Set up file path for metadata
#downloaded metadata csv - downloaded from Google drive as csv for this year
Raw_Metadata = "Raw Data/Sample_IDs_LTREB_SMARTX_2024.csv"
#Collection_Dates = "Raw Data/Sample_Collection_Dates_2024.csv"
cat(run_notes)
raw_metadata <- read.csv(Raw_Metadata)
#clean up columns in metadata file:
#Pull out only SMARTX Rows
#Create a Sample_Name column to match the SEAL
metadata <- raw_metadata %>%
filter(grepl("CO2xN", Experiment, ignore.case = TRUE)) %>%
mutate(Sample_Name = paste0(Sample.ID)) %>%
mutate(Month = sample_month) %>%
mutate(Year = sample_year) %>%
rename(
Sample_ID = Sample.ID,
Plot_Name = Chamber.Plot.Name,
CO2_Treatment = CO2.Treatment,
N_Treatment = N.Treatment,
Temp_Treatment = Temp.Treatment
) %>%
select(-Temp_Treatment) %>%
mutate(Treatment = ifelse(
CO2_Treatment == "Elev" &
N_Treatment == "N",
"eCO2_N",
ifelse(
CO2_Treatment == "Elev" &
N_Treatment == "Amb",
"eCO2",
ifelse(CO2_Treatment == "Amb" &
N_Treatment == "N"  , "N" , "Ambient")
)
))
#Bring in the collection date and any field notes if relevant
#collection_metadata <- read.csv(Collection_Dates)
#then we will merge the collection date for SMARTX based on the project and the chambers
#Read in Nov Data
raw <- read.csv(GHG_file)
#rename column
colnames(raw)[1] <- "Sample_ID"
#head(stds_ch4)
stds_ch4 <-  raw %>%
filter(str_detect(Type, "Standard"))
#Correct data class
stds_ch4[,"Conc_CH4"] <- as.numeric(stds_ch4[,"Conc_CH4"])
#Curve for CH4
CH4_Curve <- ggplot(stds_ch4, aes(Conc_CH4, CH4_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE) + labs(title="CH4 Std Curve")
CH4_Curve
CH4_lm <- lm(stds_ch4$CH4_Area ~ stds_ch4$Conc_CH4)
summary(CH4_lm)
cf <- coef(CH4_lm)
#create data frame with 1 rows and 0 columns
Slope_CH4 <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CH4$Curve <- "Slope_CH4"
Slope_CH4$R2 <- summary(CH4_lm)$adj.r.squared
Slope_CH4$Slope <- cf[2]
Slope_CH4$Intercept <- cf[1]
#head(Slope_CH4_low)
#add in run date
Slope_CH4$Run_Date <- run_date
log <- read.csv(log_path)
head(log)
log <- log[ ,-c(1)]
log <- rbind(log, Slope_CH4)
Slopes_chk <- ggplot(log, aes(Run_Date, Slope, col=Curve)) + geom_point(size=4) + geom_line() + theme_bw()
Slopes_chk
write.csv(log, log_path)
#head(raw)
#pull out methane standards
Samples <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Blank")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#head(Samples)
#Calculate CH4 concentrations in ppm
Samples$CH4_Conc_ppm <- (Samples$CH4_Area-Slope_CH4$Intercept)/Slope_CH4$Slope
#head(Samples)
##########make flags for any dilutions needed
#highest CH4 standard = 20000
#highest CO2 standard = 50000
Samples$CH4_Flag <- ifelse(Samples$CH4_Conc_ppm >20000, "Needs Dilution", "Within Range")
#head(Samples)
chks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Blank")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "NA"))
#head(chks)
#Calculate CH4 concentrations in ppm
chks$CH4_Conc_ppm <-
(chks$CH4_Area-Slope_CH4$Intercept)/Slope_CH4$Slope
#change this if check standard concentrations are different
level_ch4 <- 1000      #ppm
#calculate percent difference of check standards
chks$Ch4_diff <- ((chks$CH4_Conc_ppm - level_ch4)/((chks$CH4_Conc_ppm + level_ch4)/2)) * 100
chks$CH4_diff_flag <-  ifelse(chks$Ch4_diff <10, 'YES', 'NO, rerun')
#now plot the Ch4 concentrations and the CO2 concentrations vs. the expected concentration
#then also make the color the percent difference between the expected and observed concentration
ch4_chk <-  ggplot(data = chks, aes(x = Sample_ID, y = CH4_Conc_ppm, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c( "NO, rerun" = "darkgrey", "YES" = "darkgreen"))+
theme_classic() + labs(x= " ", y="Concentration (ppm)", title="Check Stds: CH4") +
theme(legend.position="bottom") +  geom_hline(yintercept=level_ch4, linetype="dashed",
color = "black", size=1) +
guides(fill=guide_legend(title="% Difference <10%"))
ch4_chk
cat("Assess Blanks")
CH4_blks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#Pull out samples from df_all to calc quantile
samples_blanks <- raw %>%
filter(str_detect(Type, c("Sample")))  #have to do this because CO2xN ids start with L
#Calculating the lowest 25% of sample concentrations to compare to the blank concentrations
blk_flag_CH4 <- quantile(samples_blanks$CH4_Area, prob=c(.25))   #this gives you the lower 25% quartile of the data
CH4_blks$CH4_diff_flag <-  ifelse(Blanks$CH4_Area <= blk_flag_CH4, 'YES', 'NO, rerun')
#calculate the percent of check standards that are within the range based on the flag
CH4_blks_percent <- (sum(CH4_blks$CH4_diff_flag == "YES")/nrow(CH4_blks))*100
#report out if flags indicate need for rerun
ifelse(CH4_blks_percent >= 60,
">60% of CH4 Blanks are below the lower 25% quartile of samples - PROCEED",
"<60% of CH4 blaks are lower 25% quartile of samples - REASSESS")
#plotting the blanks compared to the lower 25% of conc (what the flag is)
CH4_blks_plot <-  ggplot(data = CH4_blks, aes(x = Sample_ID, y = CH4_Area, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c("YES" = "deepskyblue3", "NO, rerun" = "darkred")) +
theme_classic() + labs(x= " ", y="CH4 Area", title="CH4 Blanks") +
theme(legend.position="bottom") +
geom_hline(yintercept=as.numeric(blk_flag_CH4), linetype="dashed",
color = "black", linewidth=1)  +
guides(fill=guide_legend(title="Blank Conc <25% Quartile Samples"))
print(CH4_blks_plot)
cat("Assess Blanks")
CH4_blks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#Pull out samples from df_all to calc quantile
samples_blanks <- raw %>%
filter(str_detect(Type, c("Sample")))  #have to do this because CO2xN ids start with L
#Calculating the lowest 25% of sample concentrations to compare to the blank concentrations
blk_flag_CH4 <- quantile(samples_blanks$CH4_Area, prob=c(.25))   #this gives you the lower 25% quartile of the data
CH4_blks$CH4_diff_flag <-  ifelse(Blanks$CH4_Area <= blk_flag_CH4, 'YES', 'NO, rerun')
#calculate the percent of check standards that are within the range based on the flag
CH4_blks_percent <- (sum(CH4_blks$CH4_diff_flag == "YES")/nrow(CH4_blks))*100
#report out if flags indicate need for rerun
ifelse(CH4_blks_percent >= 60,
">60% of CH4 Blanks are below the lower 25% quartile of samples - PROCEED",
"<60% of CH4 blaks are lower 25% quartile of samples - REASSESS")
#plotting the blanks compared to the lower 25% of conc (what the flag is)
CH4_blks_plot <-  ggplot(data = CH4_blks, aes(x = Sample_ID, y = CH4_Area, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c("YES" = "deepskyblue3", "NO, rerun" = "darkred")) +
theme_classic() + labs(x= " ", y="CH4 Area", title="CH4 Blanks") +
theme(legend.position="bottom") +
geom_hline(yintercept=as.numeric(blk_flag_CH4), linetype="dashed",
color = "black", linewidth=1)  +
guides(fill=guide_legend(title="Blank Conc <25% Quartile Samples"))
print(CH4_blks_plot)
CH4_blks_percent <- (sum(CH4_blks$CH4_diff_flag == "YES")/nrow(CH4_blks))*100
cat("Assess Blanks")
CH4_blks <-  raw %>%
filter(!str_detect(Type, "Lab air")) %>%
filter(!str_detect(Type, "Standard")) %>%
filter(!str_detect(Type, "Sample")) %>%
filter(!str_detect(Type, "Chk_STD")) %>%
filter(!str_detect(Type, "ChkStd")) %>%
filter(!str_detect(Type, "NA"))
#Pull out samples from df_all to calc quantile
samples_blanks <- raw %>%
filter(str_detect(Type, c("Sample")))  #have to do this because CO2xN ids start with L
#Calculating the lowest 25% of sample concentrations to compare to the blank concentrations
blk_flag_CH4 <- quantile(samples_blanks$CH4_Area, prob=c(.25))   #this gives you the lower 25% quartile of the data
CH4_blks$CH4_diff_flag <-  ifelse(CH4_blks$CH4_Area <= blk_flag_CH4, 'YES', 'NO, rerun')
#calculate the percent of check standards that are within the range based on the flag
CH4_blks_percent <- (sum(CH4_blks$CH4_diff_flag == "YES")/nrow(CH4_blks))*100
#report out if flags indicate need for rerun
ifelse(CH4_blks_percent >= 60,
">60% of CH4 Blanks are below the lower 25% quartile of samples - PROCEED",
"<60% of CH4 blaks are lower 25% quartile of samples - REASSESS")
#plotting the blanks compared to the lower 25% of conc (what the flag is)
CH4_blks_plot <-  ggplot(data = CH4_blks, aes(x = Sample_ID, y = CH4_Area, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c("YES" = "deepskyblue3", "NO, rerun" = "darkred")) +
theme_classic() + labs(x= " ", y="CH4 Area", title="CH4 Blanks") +
theme(legend.position="bottom") +
geom_hline(yintercept=as.numeric(blk_flag_CH4), linetype="dashed",
color = "black", linewidth=1)  +
guides(fill=guide_legend(title="Blank Conc <25% Quartile Samples"))
print(CH4_blks_plot)
#find average of run blanks for flagging samples later
# Compute averages
blk_avg_CH4 <- mean(CH4_blks$Conc, na.rm = TRUE)
# Create a data frame
blank_avgs <- data.frame(
Test = c("CH4"),
Blank_Mean_Conc = c(blk_avg_CH4)
)
# Pretty print
knitr::kable(blank_avgs, caption = "Mean Concentration of Blanks", digits = 4)
#write out a flag to the sample dataframe if more than 60% of the blanks are above the lower 25% quantile of samples
if (CH4_blks_percent <= chks_flag) {  # assuming you have tn_chks_percent similarly
df_all_cor$CH4_flag <- ifelse(
df_all_cor$CH4_flag != "",
paste0(df_all_cor$CH4_flag, "; CH4 blanks out of range"),
"CH4 blanks out of range"
)
}
